name: weaviate-version-in-image
description: 'Retrieves the Weaviate version from a given Weaviate Docker image.'
inputs:
  image_tag:
    description: 'The Weaviate Docker image to retrieve the version from.'
    required: true
    default: 'latest'
  registry:
    description: 'The Docker registry and namespace to pull the image from.'
    required: false
    default: 'docker.io/semitechnologies/weaviate'
runs:
  using: 'composite'
  steps:
    - name: Set globals
      id: globals
      shell: bash
      run: |
        echo "ACTION_TIMEOUT=300" >> "${GITHUB_OUTPUT}"
        echo "ACTION_PORT=8080" >> "${GITHUB_OUTPUT}"
    - name: Start Weaviate service
      shell: bash
      id: start-docker-container
      run: |
        CONTAINER_ID=$(docker run -d --rm \
          --name weaviate_service \
          -p ${{ steps.globals.outputs.ACTION_PORT}}:8080 \
          ${{ inputs.registry }}:${{ inputs.image }} \
          --host 0.0.0.0 \
          --port 8080 \
          --scheme http \
          --write-timeout 600s)
        echo "Container ID: $CONTAINER_ID"
        echo "::set-output name=container_id::$CONTAINER_ID"
    - name: Wait for .well-known/ready API to be ready
      shell: bash
      id: wait-for-ready
      run: |
        start_time=$(date +%s)
        timeout=${{ steps.globals.outputs.ACTION_TIMEOUT }}
        until [ "$(curl -w '%{http_code}' -s -o /dev/null http://localhost:${{ steps.globals.outputs.ACTION_PORT}}/v1/.well-known/ready)" -eq 200 ]; do
          current_time=$(date +%s)
          elapsed_time=$((current_time - start_time))
          if [ "$elapsed_time" -ge "$timeout" ]; then
          echo "Timeout of $timeout seconds reached. Exiting..."
          exit 1
          fi
          echo "Waiting for Weaviate service to be ready..."
          sleep 5
        done
    - name: Set the Weaviate version as an output
      shell: bash
      run: |
        WEAVIATE_VERSION=$(curl http://localhost:${{ steps.globals.outputs.ACTION_PORT}}/v1/meta | jq -r '.version')
        echo "::set-output name=weaviate_version::$(echo $WEAVIATE_VERSION)"